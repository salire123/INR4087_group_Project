# docker-compose.yml
# version: "3.8"
services:
  mysql:
    image: mysql:latest
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
      - ../db/mysql/db-init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: "%"
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"  
    networks:
      - inside-network

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
      - ../db/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - inside-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password}
      - SERVICE_ACCESS_KEY=appuser
      - SERVICE_SECRET_KEY=apppassword
    entrypoint: /bin/sh
    command: -c "/minio-init.sh"
    volumes:
      - minio-data:/data
      - ./minio/minio-init.sh:/minio-init.sh:ro
    networks:
      - inside-network
      - outside-network

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - inside-network
      - outside-network

  backend:
    build:
        context: ../backend
        dockerfile: ../backend/Dockerfile
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      # Flask
      SECRET_KEY: ${SECRET_KEY}
      FLASK_APP: "app.py"
      APP_PORT: "${BACKEND_PORT}"
      DOCKER: "${DOCKER}"
      
      # MySQL
      MYSQL_HOST: "mysql"
      MYSQL_PORT: "${MYSQL_PORT}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_HOST: "%"
      # MongoDB
      MONGO_URL: "mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017"
      MONGO_DATABASE: "${MONGO_DATABASE}"
      # MinIO
      MINIO_ENDPOINT: "minio:9000"
      MINIO_BUCKET: "my-bucket"
      MINIO_ACCESS_KEY: "appuser"
      MINIO_SECRET_KEY: "apppassword"

      # Redis
      REDIS_HOST: "redis"
      REDIS_PORT: "${REDIS_PORT}"
    volumes:
      - ./backendlog:/app/log
    networks:
      - inside-network
      - outside-network
    depends_on:
      - mysql
      - mongodb
      - minio
      
networks:
  inside-network:
    driver: bridge
    internal: true  # Makes this network isolated from the host
  outside-network:
    driver: bridge

volumes:
  mysql-data:
  mongodb-data:
  minio-data: